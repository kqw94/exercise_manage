# Generated by Django 5.1.7 on 2025-04-05 09:19

import django.db.models.deletion
from django.db import migrations, models


def migrate_schools(apps, schema_editor):
    # 获取历史模型
    Exam = apps.get_model('core', 'Exam')
    School = apps.get_model('core', 'School')

    # 获取所有唯一的 from_school 值
    unique_schools = Exam.objects.values('from_school').distinct()

    # 为每个唯一的 from_school 创建 School 记录
    for entry in unique_schools:
        from_school = entry['from_school']
        if from_school:  # 确保 from_school 不为空
            # 检查是否已存在该学校
            school, created = School.objects.get_or_create(name=from_school)
            # 更新所有相关的 Exam 记录
            Exam.objects.filter(from_school=from_school).update(school=school)

def reverse_migrate_schools(apps, schema_editor):
    # 反向迁移：清空 School 表并将 Exam.school 设置为 null
    Exam = apps.get_model('your_app_name', 'Exam')
    School = apps.get_model('your_app_name', 'School')
    Exam.objects.update(school=None)
    School.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ("core", "0005_exam_category"),
    ]

    operations = [
        migrations.CreateModel(
            name="School",
            fields=[
                ("school_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "schools",
            },
        ),
        migrations.AddField(
            model_name="exam",
            name="school",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="exams",
                to="core.school",
            ),
        ),
         migrations.RunPython(
            migrate_schools,  # 仅正向迁移
        ),
    ]
